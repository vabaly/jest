// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`printDiffOrStringify asymmetricMatcher array 1`] = `
- Expected  - 1
+ Received  + 1

  Array [
    1,
    Any<Number>,
-   3,
+   2,
  ]
`;

exports[`printDiffOrStringify asymmetricMatcher circular array 1`] = `
- Expected  - 1
+ Received  + 1

  Array [
    1,
    Any<Number>,
-   3,
+   2,
    [Circular],
  ]
`;

exports[`printDiffOrStringify asymmetricMatcher circular map 1`] = `
- Expected  - 2
+ Received  + 2

  Map {
    "a" => 1,
    "b" => Any<Number>,
-   "c" => 3,
+   "c" => 2,
    "circular" => Map {
      "a" => 1,
      "b" => Any<Number>,
-     "c" => 3,
+     "c" => 2,
      "circular" => [Circular],
    },
  }
`;

exports[`printDiffOrStringify asymmetricMatcher circular object 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
    "a": [Circular],
    "b": Any<Number>,
-   "c": 3,
+   "c": 2,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher custom asymmetricMatcher 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
    "a": equal5<>,
-   "b": false,
+   "b": true,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher jest asymmetricMatcher 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
    "a": Any<Number>,
    "b": Anything,
    "c": ArrayContaining [
      1,
      3,
    ],
    "d": StringContaining "jest",
    "e": StringMatching /^jest/,
    "f": ObjectContaining {
      "a": Any<Date>,
    },
-   "g": true,
+   "g": false,
    Symbol(h): Any<String>,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher map 1`] = `
- Expected  - 1
+ Received  + 1

  Map {
    "a" => 1,
    "b" => Any<Number>,
-   "c" => 3,
+   "c" => 2,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher minimal test 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
    "a": Any<Number>,
-   "b": 2,
+   "b": 1,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher nested object 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
    "a": Any<Number>,
    "b": Object {
      "a": 1,
      "b": Any<Number>,
    },
-   "c": 2,
+   "c": 1,
  }
`;

exports[`printDiffOrStringify asymmetricMatcher object in array 1`] = `
- Expected  - 1
+ Received  + 1

  Array [
    1,
    Object {
      "a": 1,
      "b": Any<Number>,
    },
-   3,
+   2,
  ]
`;

exports[`printDiffOrStringify asymmetricMatcher transitive circular 1`] = `
- Expected  - 1
+ Received  + 1

  Object {
-   "a": 3,
+   "a": 2,
    "nested": Object {
      "b": Any<Number>,
      "parent": [Circular],
    },
  }
`;

exports[`printDiffOrStringify expected and received are multi line with trailing spaces 1`] = `
- Expected  - 3
+ Received  + 3

- delete 
+ insert 
- common expected common
+ common received common
- prev 
+ next 
`;

exports[`printDiffOrStringify expected and received are single line with multiple changes 1`] = `
Expected: "delete common expected common prev"
Received: "insert common received common next"
`;

exports[`printDiffOrStringify expected is empty and received is single line 1`] = `
Expected: ""
Received: "single line"
`;

exports[`printDiffOrStringify expected is multi line and received is empty 1`] = `
Expected: "multi
line"
Received: ""
`;

exports[`printDiffOrStringify has no common after clean up chaff multiline 1`] = `
- Expected  - 2
+ Received  + 2

- delete
- two
+ insert
+ 2
`;

exports[`printDiffOrStringify has no common after clean up chaff one-line 1`] = `
Expected: "delete"
Received: "insert"
`;
